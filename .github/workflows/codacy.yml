
name: Client Side Tools and Coverage

on:
  push:
    branches: [ '*' ]
  pull_request:
    branches: [ '*' ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.11  # Choose your Python version

      - name: Install dependencies
        run: |
          sudo apt-get -qq update
          sudo apt-get -y -qq install openjdk-8-jdk openjdk-8-jre
          pip3 install coverage
          pip3 install pytest

      - name: Run tests and collect coverage
        run: |
          # Replace with the actual paths to your test files and source files
          coverage run -m pytest /home/runner/work/sample-python-project/sample-python-project/*.py
          coverage run -m unittest /home/runner/work/sample-python-project/sample-python-project/*.py
          coverage report -m --fail-under=70  # You can set your desired coverage threshold here
        continue-on-error: true

      - name: Generate coverage XML report
        run: |
          # Replace with the actual paths to your test files and source files
          coverage xml -o /home/runner/work/sample-python-project/sample-python-project/coverage.xml

      - name: Upload coverage report to Codacy
        env:
          CODACY_PROJECT_TOKEN: ${{ secrets.CODACY_PROJECT_TOKEN }}
        run: |
          bash <(curl -Ls https://coverage.codacy.com/get.sh) report -r //home/runner/work/sample-python-project/sample-python-project/coverage.xml
      
      - name: Run Codacy Analysis CLI with Docker
        run: |
          export CODACY_CODE=$GITHUB_WORKSPACE
          docker run \
            --rm=true \
            --env CODACY_CODE="$CODACY_CODE" \
            --volume /var/run/docker.sock:/var/run/docker.sock \
            --volume "$CODACY_CODE":"$CODACY_CODE" \
            --volume /tmp:/tmp \
            codacy/codacy-analysis-cli \
              analyze --tool spotbugs --upload --project-token ${{ secrets.CODACY_PROJECT_TOKEN }} --max-allowed-issues 99999 --commit-uuid $GITHUB_SHA